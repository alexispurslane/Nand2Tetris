// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 * if the ALU output == 0, zr is set to 1; otherwise zr is set to 0;
 * if the ALU output < 0, ng is set to 1; otherwise ng is set to 0.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
	// Changes to X
	Mux16(a=x, b=false, sel=zx, out=x1); // x1 is x zeroed or not
	Not16(in=x1, out=x2); // x2 is x notted
	                     // (for the next line, becouse I can't not it inline)
	Mux16(a=x1, b=x2, sel=nx, out=x3); // x3 is notted or not

	// Changes to Y
	Mux16(a=y, b=false, sel=zy, out=y1); // y1 is y zeroed or not
	Not16(in=y1, out=y2); // y2 is y notted
	                     // (for the next line, becouse I can't not it inline)
	Mux16(a=y1, b=y2, sel=ny, out=y3); // y3 is notted or not

	// Output
	Add16(a=x3, b=y3, out=added);
	And16(a=x3, b=y3, out=anded);
	Mux16(a=anded, b=added, sel=f, out=out1);
	Not16(in=out1, out=nout);
	Mux16(a=out1, b=nout, sel=no, out[0..7]=part1, out[8..15]=part2, out=out, out[15]=o15);

	// Output zero?
	Or8Way(in=part1, out=or1); // checking each 8-bit chunk for nonzero
	Or8Way(in=part2, out=or2);
	Or(a=or1, b=or2, out=nonzero); // checking if any digits are nonzero
	Not(in=nonzero, out=zr);
	
	// Output negative?
	Mux(a=false, b=true, sel=o15, out=ng);
}
